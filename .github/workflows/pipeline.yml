name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]    
    types: [opened, synchronize]
env:
  SKIP: ${{ contains(join(github.event.commits.*.message, ', '), '#skip' ) }}
jobs:
  checks:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: test env
        run: echo ${{ env.SKIP }}
      - name: Install dependencies 
        run: npm install  
      - name: Check style        
        run: npm run eslint
      - name: Build
        run: npm run build
      - name: Test
        run: npm run test
      - name: Send status to Discord
        uses: nebularg/actions-discord-webhook@v1
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK }} # required
          status: "Build failed :( ❌" # optional, this is the default
        if: failure() # or failure() or success()
  e2e-test:
      timeout-minutes: 60
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npm run test:e2e
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
  deploy:
    name: Deploy to Render
    runs-on: ubuntu-22.04
    needs: [checks, e2e-test]
    if: ${{ needs.checks.result == 'success' && needs.e2e-test.result == 'success' && github.event_name == 'push'}}
    steps:
    - name: Trigger deployment
      if: ${{ env.SKIP == false }}
      run: curl https://api.render.com/deploy/srv-${{ secrets.SRV_ID }}?key=${{ secrets.API_KEY }}
    - name: Send status to Discord
      uses: nebularg/actions-discord-webhook@v1
      with:
        webhook_url: ${{ secrets.DISCORD_WEBHOOK }} # required
        status: "New deployment live! ✅"  # optional, this is the default
      if: success() # or failure() or success()
  tag_release:
    needs: [deploy]
    if: ${{ github.event_name == 'push'}}
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: '0'
    - name: Bump version and push tag
      if: ${{ env.SKIP == 'false' }}
      uses: anothrNick/github-tag-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  a_test_job:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: commit messages
        env:
          SKIP: ${{ contains(join(github.event.commits.*.message, ', '), '#skip' ) }}
        run: echo "$SKIP"
      - name: commits
        env:
          COMMITS: ${{ toJson(github.event.commits) }}
        run: echo "$COMMITS"
      - name: commit messages
        env:
          COMMIT_MESSAGES: ${{ toJson(github.event.commits.*.url) }}
        run: echo "$COMMIT_MESSAGES"
